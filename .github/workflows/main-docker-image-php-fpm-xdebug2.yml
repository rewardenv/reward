# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
---
name: Docker Image PHP-FPM Xdebug2
on:
  workflow_dispatch:
  workflow_run:
    workflows: [ "Docker Image PHP-FPM Base" ]
    branches: [ main ]
    types:
      - completed
  push:
    paths:
      - images/php-fpm/xdebug2/.trigger
    branches:
      - main
jobs:
  php-fpm-xdebug2:
    name: php-fpm/xdebug2
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    strategy:
      matrix:
        BASE_IMAGE_NAME: [ "debian", "ubuntu" ]
        # Bookworm doesn't support PHP < 8.0
        BASE_IMAGE_TAG: [ "bullseye", "jammy" ]
        PHP_VERSION: [ "5.6", "7.0", "7.1", "7.2", "7.3", "7.4" ]
        exclude:

          # jammy is an ubuntu distro
          - BASE_IMAGE_NAME: debian
            BASE_IMAGE_TAG: jammy

          # bullseye are debian distros
          - BASE_IMAGE_NAME: ubuntu
            BASE_IMAGE_TAG: bullseye

        # debian-bullseye images are the default and will be built with and without '-debian-bullseye' suffix
        include:
          - BASE_IMAGE_NAME: debian
            BASE_IMAGE_TAG: bullseye
            DEFAULT_IMAGE: "true"
    steps:
      - uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:master

      - uses: supplypike/setup-bin@v3
        with:
          uri: https://github.com/hairyhenderson/gomplate/releases/latest/download/gomplate_linux-amd64
          name: gomplate
          version: latest

      - name: Generate Dockerfile
        run: gomplate -f images/php-fpm/xdebug2/tpl.Dockerfile -o images/php-fpm/xdebug2/Dockerfile
        env:
          BASE_IMAGE_NAME: ${{ matrix.BASE_IMAGE_NAME }}
          BASE_IMAGE_TAG: ${{ matrix.BASE_IMAGE_TAG }}

      - name: Build and push default image
        uses: docker/build-push-action@v5
        if: ${{ matrix.DEFAULT_IMAGE == 'true' }}
        with:
          context: images/php-fpm/xdebug2/context
          file: images/php-fpm/xdebug2/Dockerfile
          push: true
          platforms: "linux/amd64,linux/arm64"
          tags: |
            ${{ vars.DOCKER_REPO }}/php-fpm:${{ matrix.PHP_VERSION }}-xdebug2
            ${{ vars.DOCKER_REPO }}/php-fpm:${{ matrix.PHP_VERSION }}-xdebug2-${{ matrix.BASE_IMAGE_NAME }}-${{ matrix.BASE_IMAGE_TAG }}
          build-args: PHP_VERSION=${{ matrix.PHP_VERSION }}
          cache-from: type=registry,ref=${{ vars.DOCKER_REPO }}/php-fpm:${{ matrix.PHP_VERSION }}-xdebug2-${{ matrix.BASE_IMAGE_NAME }}-${{ matrix.BASE_IMAGE_TAG }}
          cache-to: type=inline

      - name: Build and push default image
        uses: docker/build-push-action@v5
        if: ${{ matrix.DEFAULT_IMAGE != 'true' }}
        with:
          context: images/php-fpm/xdebug2/context
          file: images/php-fpm/xdebug2/Dockerfile
          push: true
          platforms: "linux/amd64,linux/arm64"
          tags: |
            ${{ vars.DOCKER_REPO }}/php-fpm:${{ matrix.PHP_VERSION }}-xdebug2-${{ matrix.BASE_IMAGE_NAME }}-${{ matrix.BASE_IMAGE_TAG }}
          build-args: PHP_VERSION=${{ matrix.PHP_VERSION }}
          cache-from: type=registry,ref=${{ vars.DOCKER_REPO }}/php-fpm:${{ matrix.PHP_VERSION }}-xdebug2-${{ matrix.BASE_IMAGE_NAME }}-${{ matrix.BASE_IMAGE_TAG }}
          cache-to: type=inline
