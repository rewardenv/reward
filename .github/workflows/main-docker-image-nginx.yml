# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
---
name: Docker Image Nginx
on:
  schedule:
    - cron: "0 6 1 * *"
  workflow_dispatch:
  push:
    paths:
      - images/.trigger
      - images/nginx/**
    branches:
      - main
jobs:
  nginx:
    name: nginx
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - BUILD_TAG: "latest"
            IMAGE_TAG: "1.25"
          - BUILD_TAG: "1.25"
            IMAGE_TAG: "1.25"
          - BUILD_TAG: "1.24"
            IMAGE_TAG: "1.24"
          - BUILD_TAG: "1.23"
            IMAGE_TAG: "1.23"
          - BUILD_TAG: "1.22"
            IMAGE_TAG: "1.22"
          - BUILD_TAG: "1.21"
            IMAGE_TAG: "1.21"
          - BUILD_TAG: "1.20"
            IMAGE_TAG: "1.20"
          - BUILD_TAG: "1.19"
            IMAGE_TAG: "1.19"
          - BUILD_TAG: "1.18"
            IMAGE_TAG: "1.18"
          - BUILD_TAG: "1.17"
            IMAGE_TAG: "1.17"
          - BUILD_TAG: "1.16"
            IMAGE_TAG: "1.16"
    steps:
      - uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: mirror.gcr.io/tonistiigi/binfmt:latest

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:master
          config-inline: |
            [registry."docker.io"]
              mirrors = ["mirror.gcr.io"]

      - uses: supplypike/setup-bin@v3
        with:
          uri: https://github.com/hairyhenderson/gomplate/releases/latest/download/gomplate_linux-amd64
          name: gomplate
          version: latest

      - name: Generate Dockerfile
        run: gomplate -f images/nginx/tpl.Dockerfile -o images/nginx/Dockerfile
        env:
          IMAGE_TAG: ${{ matrix.IMAGE_TAG }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: images/nginx/context
          file: images/nginx/Dockerfile
          push: true
          platforms: "linux/amd64,,linux/arm/v7,linux/arm64"
          tags: ${{ vars.DOCKER_REPO }}/nginx:${{ matrix.BUILD_TAG }}
          cache-from: type=registry,ref=${{ vars.DOCKER_REPO }}/nginx:${{ matrix.BUILD_TAG }}
          cache-to: type=inline
