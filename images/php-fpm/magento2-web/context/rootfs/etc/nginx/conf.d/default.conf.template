# default Docker DNS server
resolver {{ getenv "NGINX_RESOLVER" "127.0.0.11" }};

# Select upstream backend to use based on presence of Xdebug cookies and Blackfire headers
map "$http_X_BLACKFIRE_QUERY:$cookie_XDEBUG_SESSION$cookie_XDEBUG_PROFILE$cookie_XDEBUG_TRACE" $fastcgi_backend {
    # Nothing for debug and nothing for blackfire means its a pure request
    ":" {{ getenv "NGINX_UPSTREAM_HOST" "php-fpm" }}:{{ getenv "NGINX_UPSTREAM_PORT" "9000" }};

    # Use blackfire if the blackfire query is specified AND no debug cookie is set
    "~:$" {{ getenv "NGINX_UPSTREAM_BLACKFIRE_HOST" "php-blackfire" }}:{{ getenv "NGINX_UPSTREAM_BLACKFIRE_PORT" "9000" }};

    # In all other cases, a debug cookie will be present; use debug container
    default {{ getenv "NGINX_UPSTREAM_DEBUG_HOST" "php-debug" }}:{{ getenv "NGINX_UPSTREAM_DEBUG_PORT" "9000" }};
}

{{- $default_exists := false }}
{{- range $i := ( math.Seq 0 99 ) }}
{{- $varname := printf "NGINX_HOST_MAPPING_%v" $i }}
{{- range $key, $value := ( strings.Split ":" ( getenv $varname ) ) }}
{{- if eq $value "default" }}
{{- $default_exists = true -}}
{{- end }}
{{- end }}
{{- end }}

map $http_host $MAGE_RUN_CODE {
{{- range $i := ( math.Seq 0 99 ) }}
{{- $varname := printf "NGINX_HOST_MAPPING_%v" $i }}
{{- $vals :=  ( strings.Split ":" ( getenv $varname ) ) }}
{{- $length := len $vals }}{{- if not ( eq $length 3 ) }}{{- continue }}
{{- end }}
    {{ index $vals 0 }} {{ index $vals 1 }};
{{- end }}
{{- if not $default_exists }}
    default "";
{{- end }}
}

map $http_host $MAGE_RUN_TYPE {
{{- range $i := ( math.Seq 0 99 ) }}
{{- $varname := printf "NGINX_HOST_MAPPING_%v" $i }}
{{- $vals :=  ( strings.Split ":" ( getenv $varname ) ) }}
{{- $length := len $vals }}{{- if not ( eq $length 3 ) }}{{- continue }}
{{- end }}
    {{ index $vals 0 }} {{ index $vals 2 }};
{{- end }}
{{- if not $default_exists }}
    default "";
{{- end }}
}

map $http_x_forwarded_proto $fastcgi_https {
    default '';
    https on;
}

include /etc/nginx/snippets/http-*.conf;

server {
    listen {{ getenv "NGINX_LISTEN_HTTP" "8080" }};

    root {{ getenv "NGINX_ROOT" "/var/www/html" }}{{ getenv "NGINX_PUBLIC" "/pub" }};
    set $MAGE_ROOT {{ getenv "NGINX_ROOT" "/var/www/html" }};

    index index.html index.php;
    autoindex off;
    charset UTF-8;

    include /etc/nginx/snippets/server-*.conf;
    include /etc/nginx/available.d/{{ getenv "NGINX_TEMPLATE" "magento2.conf" }};
}
